{"version":3,"sources":["resources/models/bamboo/BambooWithBones.fbx","resources/textures/bamboo/diffuse.jpg","resources/textures/bamboo/alpha.jpg","graphics/models/Bamboo.js","resources/textures/grass/grass.jpg","graphics/models/Grass.js","resources/textures/wood/wood.jpg","graphics/models/Sideboard.js","graphics/Forest.js","components/canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Bamboo","textureLoader","treeCount","width","height","this","material","THREE","map","load","diffuseDir","alphaMap","alphaDir","alphaTest","side","opacity","transparent","xPositionRange","zPositionRange","swayAngle","trees","animatedTrees","isFadingIn","scene","self","FBXLoader","modelDir","object","traverse","child","i","clone","SkeletonUtils","position","x","randFloat","z","rotation","y","Math","PI","scaleNum","scale","add","push","swayLimit","swayStep","swayRotation","sin","tree","treeRotation","skinnedMesh","children","cos","skeleton","bones","length","bone","Grass","texture","grassDir","wrapS","wrapT","repeat","set","geometry","plane","Sideboard","woodDir","relativeXPos","relativeZPos","topBoard","botBoard","rightBoard","leftBoard","Forest","canvas","settings","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","update","raycaster","mouse","initModels","loadScene","render","loop","animationFrameId","requestAnimationFrame","fadeIn","bamboo","swayAnimation","clearScene","grass","sideboard","color","fog","background","makeVisible","sceneMeshes","sceneMesh","remove","parseFloat","setFromCamera","intersects","intersectObjects","intersection","mouseOverAnimation","parent","Canvas","props","useRef","forest","useEffect","current","onmousemove","e","clientX","clientY","onMouseMove","updateCount","ref","className","App","useState","setSettings","setUpdateCount","data","onUpdate","datgui","path","label","min","max","step","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e6421f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BambooWithBones.78755282.fbx\";","export default __webpack_public_path__ + \"static/media/diffuse.82a49499.jpg\";","export default __webpack_public_path__ + \"static/media/alpha.d3f17e68.jpg\";","import * as THREE from \"three\";\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\";\r\n\r\nimport modelDir from \"../../resources/models/bamboo/BambooWithBones.fbx\";\r\n\r\nimport diffuseDir from \"../../resources/textures/bamboo/diffuse.jpg\";\r\nimport alphaDir from \"../../resources/textures/bamboo/alpha.jpg\";\r\n\r\nexport default class Bamboo {\r\n  constructor(textureLoader, treeCount, width, height) {\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: textureLoader.load(diffuseDir),\r\n      alphaMap: textureLoader.load(alphaDir),\r\n      alphaTest: 0.5,\r\n      side:THREE.DoubleSide,\r\n      opacity: 1.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.treeCount = treeCount;\r\n    this.xPositionRange = width/2;\r\n    this.zPositionRange = height/2;\r\n\r\n    this.swayAngle = 0;\r\n    this.trees = [];\r\n    this.animatedTrees = [];\r\n    this.isFadingIn = false;\r\n  }\r\n\r\n  load(scene){\r\n    const self = this;\r\n    new FBXLoader().load(\r\n      modelDir,\r\n      function(object) {\r\n        object.traverse(function (child) {\r\n          if (child instanceof THREE.SkinnedMesh) {\r\n            child.material = self.material;\r\n          }\r\n        });\r\n\r\n        for (let i = 0; i < self.treeCount; i++) {\r\n          const clone = SkeletonUtils.clone(object);\r\n\r\n          clone.position.x = THREE.MathUtils.randFloat(-self.xPositionRange, self.xPositionRange);\r\n          clone.position.z = THREE.MathUtils.randFloat(-self.zPositionRange, self.zPositionRange);\r\n\r\n          clone.rotation.y = (2 * Math.PI) * THREE.MathUtils.randFloat(0, 1);\r\n\r\n          const scaleNum = THREE.MathUtils.randFloat(0.5, 1.25);\r\n          clone.scale.x = scaleNum;\r\n          clone.scale.y = scaleNum;\r\n          clone.scale.z = scaleNum;\r\n\r\n          scene.add(clone);\r\n          self.trees.push(clone);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n    this.isFadingIn = false;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 0.8){\r\n      this.isFadingIn = true;\r\n      this.material.opacity = 0.8;\r\n    }\r\n    else if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.001;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.isFadingIn = false;\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n\r\n  swayAnimation(){\r\n    if(this.trees !== []){\r\n      const swayLimit = (Math.PI / 8192);\r\n      const swayStep = (Math.PI / 360);\r\n      const swayRotation = (Math.sin(this.swayAngle) * swayLimit);\r\n      for(const tree of this.trees){\r\n        const treeRotation = tree.rotation.y;\r\n        const skinnedMesh = tree.children[1];\r\n        const xSwayRatio = Math.cos(treeRotation);\r\n        const zSwayRatio = Math.sin(treeRotation);\r\n\r\n        for(let i=0; i<skinnedMesh.skeleton.bones.length; i++){\r\n          const bone = skinnedMesh.skeleton.bones[i];\r\n          bone.rotation.x += swayRotation;\r\n          bone.rotation.z = swayRotation;\r\n        }\r\n      }\r\n      this.swayAngle += swayStep;\r\n    }\r\n  }\r\n\r\n  mouseOverAnimation(tree){\r\n    // const swayLimit = (Math.PI / 4096);\r\n    // const swayStep = (Math.PI / 180);\r\n    // const swayRotation = (Math.sin(this.swayAngle) * swayLimit);\r\n    //\r\n    // const skinnedMesh = tree.children[1];\r\n    // for(const bone of skinnedMesh.skeleton.bones){\r\n    //   bone.rotation.x += swayRotation;\r\n    // }\r\n    //\r\n    // this.swayAngle += swayStep;\r\n\r\n    // this.animatedTrees.push(tree);\r\n    // console.log(this.animatedTrees);\r\n\r\n    // for ( let i = 0; i < mesh.skeleton.bones.length; i ++ ) {\r\n    //   mesh.skeleton.bones[ i ].rotation.z = Math.sin( time ) * 2 / mesh.skeleton.bones.length;\r\n    // }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/grass.3be89642.jpg\";","import * as THREE from \"three\";\r\n\r\nimport grassDir from \"../../resources/textures/grass/grass.jpg\";\r\n\r\nexport default class Grass {\r\n  constructor(textureLoader, width, height) {\r\n    const texture = textureLoader.load(grassDir);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set( 4, 4 );\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  load(scene){\r\n    const geometry = new THREE.PlaneGeometry(this.width, this.height);\r\n    const plane = new THREE.Mesh(geometry, this.material);\r\n    plane.rotation.x = Math.PI/2;\r\n    scene.add(plane);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.005;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/wood.b467f5fc.jpg\";","import * as THREE from \"three\";\r\n\r\nimport woodDir from \"../../resources/textures/wood/wood.jpg\";\r\n\r\nexport default class Sideboard {\r\n  constructor(textureLoader, width, height){\r\n    const texture = textureLoader.load(woodDir);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(7, 1);\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.relativeXPos = width/2 + 2.5;\r\n    this.relativeZPos = height/2 + 2.5;\r\n  }\r\n\r\n  load(scene){\r\n    const topBoard = new THREE.Mesh(new THREE.BoxGeometry(this.width, 20, 5), this.material);\r\n    topBoard.position.z = -this.relativeZPos;\r\n    topBoard.position.y = 10;\r\n    scene.add(topBoard);\r\n\r\n    const botBoard = topBoard.clone();\r\n    botBoard.position.z = this.relativeZPos;\r\n    botBoard.position.y = 10;\r\n    scene.add(botBoard);\r\n\r\n    const rightBoard = new THREE.Mesh(new THREE.BoxGeometry(this.height + 10, 20, 5), this.material);\r\n    rightBoard.rotation.y = Math.PI/2;\r\n    rightBoard.position.x = this.relativeXPos;\r\n    rightBoard.position.z = 0;\r\n    rightBoard.position.y = 10;\r\n    scene.add(rightBoard);\r\n\r\n    const leftBoard = rightBoard.clone();\r\n    leftBoard.position.x = -this.relativeXPos;\r\n    scene.add(leftBoard);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.005;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","/*\r\nTo-Do:\r\n  - Loading state?\r\n  - New models\r\n  - Check when all models loaded\r\n  - Fix bamboo alphaMap for a smooth fade-in\r\n\r\nLinks of interest:\r\nhttps://stackoverflow.com/questions/54731571/animation-rotation-movement-of-an-object-on-mouse-click\r\nhttps://threejs.org/examples/webgl_water_flowmap.html\r\n*/\r\n\r\nimport * as THREE from \"three\";\r\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport Bamboo from \"./models/Bamboo.js\";\r\nimport Grass from \"./models/Grass.js\";\r\nimport Sideboard from \"./models/Sideboard.js\";\r\n\r\nexport default class Forest {\r\n  constructor(canvas, settings) {\r\n    this.camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 0.1, 100000);\r\n    this.camera.position.set(0, 250, 500);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setClearColor(\"rgb(40, 44, 52)\");\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 110, 0);\r\n    this.controls.update();\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n    this.textureLoader = new THREE.TextureLoader();\r\n\r\n    this.initModels(settings);\r\n    this.loadScene();\r\n    this.render();\r\n  }\r\n\r\n  render(){\r\n    const self = this;\r\n\r\n    function loop(){\r\n      self.animationFrameId = requestAnimationFrame(loop);\r\n      self.fadeIn();\r\n      self.bamboo.swayAnimation();\r\n      self.renderer.render(self.scene, self.camera);\r\n    }\r\n\r\n    loop();\r\n  }\r\n\r\n  update(settings){\r\n    this.clearScene();\r\n    this.initModels(settings);\r\n    this.loadScene();\r\n  }\r\n\r\n  initModels(settings){\r\n    this.bamboo = new Bamboo(this.textureLoader, settings.trees, settings.width, settings.height);\r\n    this.grass = new Grass(this.textureLoader, settings.width, settings.height);\r\n    this.sideboard = new Sideboard(this.textureLoader, settings.width, settings.height);\r\n  }\r\n\r\n  loadScene() {\r\n    const near = 1;\r\n    const far = 900;\r\n    const color = 'white';\r\n    this.scene.fog = new THREE.Fog(color, near, far);\r\n    this.scene.background = new THREE.Color(color);\r\n\r\n    this.scene.add(new THREE.AmbientLight(0x333333, 15));\r\n\r\n    this.bamboo.load(this.scene);\r\n    this.bamboo.makeVisible();\r\n\r\n    this.grass.load(this.scene);\r\n    this.grass.makeVisible();\r\n\r\n    this.sideboard.load(this.scene);\r\n    this.sideboard.makeVisible();\r\n  }\r\n\r\n  clearScene(){\r\n    let sceneMeshes = [];\r\n    this.scene.traverse(function(child){\r\n        sceneMeshes.push(child);\r\n    });\r\n\r\n    for(const sceneMesh of sceneMeshes){\r\n        this.scene.remove(sceneMesh);\r\n    }\r\n  }\r\n\r\n  fadeIn(){\r\n    /*\r\n    The bamboo material has to be set to 0.8 opacity initially. This is because\r\n    if the material has an alphaTest value, it will remain transparent until\r\n    opacity >= alphaTest, so the bamboo material needs a head start when fading\r\n    in. I didn't set the other textures to alphaTest 0.8 so they can all just\r\n    fade in together, and this is because doing so breaks the opacity of\r\n    materials without alphaMaps.\r\n    */\r\n    this.bamboo.fadeIn();\r\n    this.grass.fadeIn();\r\n    this.sideboard.fadeIn();\r\n  }\r\n\r\n  onMouseMove(x, y){\r\n    this.mouse.x = parseFloat(x);\r\n    this.mouse.y = parseFloat(y);\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n  \tconst intersects = this.raycaster.intersectObjects(this.bamboo.trees, true);\r\n  \tfor (const intersection of intersects) {\r\n      this.bamboo.mouseOverAnimation(intersection.object.parent);\r\n  \t}\r\n  }\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"./Canvas.css\";\r\n\r\nimport Forest from \"../../graphics/Forest.js\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const forest = useRef(null);\r\n\r\n  useEffect(() => {\r\n    forest.current = new Forest(canvas.current, props.settings);\r\n\r\n    canvas.current.onmousemove = (e) => {\r\n      if(!forest.current.bamboo.isFadingIn){\r\n        const x = (e.clientX / window.innerWidth) * 2 - 1;\r\n    \t  const y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n        forest.current.onMouseMove(x, y);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.updateCount>0){\r\n      forest.current.update(props.settings);\r\n    }\r\n  }, [props.updateCount]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvas} width={window.innerWidth} height={window.innerHeight} className=\"canvas\">\r\n        <p>Your browser doesn't support canvas.</p>\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport Canvas from \"./components/canvas/Canvas.js\";\n\nimport DatGui, { DatButton, DatNumber } from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\n\nfunction App() {\n  const [settings, setSettings] = useState({\n    width: 300,\n    height: 300,\n    trees: 400\n  });\n  const [updateCount, setUpdateCount] = useState(0);\n\n  const handleChange = (datgui) => {\n    setSettings({\n      width: datgui.width,\n      height: datgui.height,\n      trees: datgui.trees\n    });\n  }\n\n  const handleUpdate = () => {\n    setUpdateCount(updateCount + 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <DatGui data={settings} onUpdate={handleChange}>\n        <DatNumber path=\"width\" label=\"Width\" min={10} max={1000} step={1}/>\n        <DatNumber path=\"height\" label=\"Height\" min={10} max={1000} step={1}/>\n        <DatNumber path=\"trees\" label=\"Trees\" min={1} max={1000} step={1}/>\n        <DatButton label=\"Update\" onClick={handleUpdate}/>\n      </DatGui>\n      <Canvas settings={settings} updateCount={updateCount}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}