{"version":3,"sources":["resources/models/bamboo/BambooWithBones.fbx","resources/textures/bamboo/diffuse.jpg","resources/textures/bamboo/specular.jpg","resources/textures/bamboo/normal.jpg","resources/textures/bamboo/alpha.jpg","graphics/models/Bamboo.js","resources/textures/grass/grass.jpg","graphics/models/Grass.js","resources/textures/wood/wood.jpg","graphics/models/Sideboard.js","graphics/Forest.js","components/canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Bamboo","textureLoader","this","material","THREE","map","load","diffuseDir","specularMap","specularDir","normalMap","normalDir","alphaMap","alphaDir","alphaTest","side","opacity","transparent","trees","fadingIn","scene","self","FBXLoader","modelDir","object","traverse","child","i","clone","SkeletonUtils","position","x","randFloat","z","rotation","y","Math","PI","scaleNum","scale","add","push","Grass","texture","grassDir","wrapS","wrapT","repeat","set","geometry","plane","Sideboard","woodDir","topBoard","botBoard","rightBoard","leftBoard","Forest","canvas","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","update","raycaster","mouse","bamboo","grass","sideboard","render","loop","requestAnimationFrame","fadeIn","color","fog","background","makeVisible","isFadingIn","console","log","parseFloat","setFromCamera","intersects","intersectObjects","getTrees","intersection","Canvas","props","useRef","useEffect","forest","current","onmousemove","e","clientX","clientY","onMouseMove","setup","ref","width","height","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18e3724.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BambooWithBones.78755282.fbx\";","export default __webpack_public_path__ + \"static/media/diffuse.4c274908.jpg\";","export default __webpack_public_path__ + \"static/media/specular.c52433c2.jpg\";","export default __webpack_public_path__ + \"static/media/normal.69df512f.jpg\";","export default __webpack_public_path__ + \"static/media/alpha.d3f17e68.jpg\";","import * as THREE from \"three\";\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\";\r\n\r\nimport modelDir from \"../../resources/models/bamboo/BambooWithBones.fbx\";\r\n\r\nimport diffuseDir from \"../../resources/textures/bamboo/diffuse.jpg\";\r\nimport specularDir from \"../../resources/textures/bamboo/specular.jpg\";\r\nimport normalDir from \"../../resources/textures/bamboo/normal.jpg\";\r\nimport alphaDir from \"../../resources/textures/bamboo/alpha.jpg\";\r\n\r\nexport default class Bamboo {\r\n  constructor(textureLoader) {\r\n    this.material = new THREE.MeshPhongMaterial({\r\n      map: textureLoader.load(diffuseDir),\r\n      specularMap: textureLoader.load(specularDir),\r\n      normalMap: textureLoader.load(normalDir),\r\n      alphaMap: textureLoader.load(alphaDir),\r\n      alphaTest: 0.8,\r\n      side:THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.trees = [];\r\n    this.fadingIn = false;\r\n  }\r\n\r\n  load(scene){\r\n    const self = this;\r\n    new FBXLoader().load(\r\n      modelDir,\r\n      function(object) {\r\n        object.traverse(function (child) {\r\n          if (child instanceof THREE.SkinnedMesh) {\r\n            child.material = self.material;\r\n          }\r\n        });\r\n\r\n        for (let i = 0; i < 250; i++) {\r\n          const clone = SkeletonUtils.clone(object);\r\n\r\n          clone.position.x = THREE.MathUtils.randFloat(-150, 150);\r\n          clone.position.z = THREE.MathUtils.randFloat(-150, 150);\r\n\r\n          clone.rotation.y = Math.PI * THREE.MathUtils.randFloat(0, 1);\r\n\r\n          const scaleNum = THREE.MathUtils.randFloat(0.5, 1.25);\r\n          clone.scale.x = scaleNum;\r\n          clone.scale.y = scaleNum;\r\n          clone.scale.z = scaleNum;\r\n\r\n          scene.add(clone);\r\n          self.trees.push(clone);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 0.8){\r\n      this.fadingIn = true;\r\n      this.material.opacity = 0.8;\r\n    }\r\n    else if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.001;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.fadingIn = false;\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n\r\n  isFadingIn(){\r\n    return this.fadingIn;\r\n  }\r\n\r\n  getTrees(){\r\n    return this.trees;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/grass.3be89642.jpg\";","import * as THREE from \"three\";\r\n\r\nimport grassDir from \"../../resources/textures/grass/grass.jpg\";\r\n\r\nexport default class Grass {\r\n  constructor(textureLoader) {\r\n    const texture = textureLoader.load(grassDir);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set( 4, 4 );\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n  }\r\n\r\n  load(scene){\r\n    const geometry = new THREE.PlaneGeometry(300, 300);\r\n    const plane = new THREE.Mesh(geometry, this.material);\r\n    plane.rotation.x = Math.PI/2;\r\n    scene.add(plane);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n  \r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.005;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/wood.b467f5fc.jpg\";","import * as THREE from \"three\";\r\n\r\nimport woodDir from \"../../resources/textures/wood/wood.jpg\";\r\n\r\nexport default class Sideboard {\r\n  constructor(textureLoader){\r\n    const texture = textureLoader.load(woodDir);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(7, 1);\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n  }\r\n\r\n  load(scene){\r\n    const topBoard = new THREE.Mesh(new THREE.BoxGeometry(300, 20, 5), this.material);\r\n    topBoard.position.z = -152.5;\r\n    topBoard.position.y = 10;\r\n    scene.add(topBoard);\r\n\r\n    const botBoard = topBoard.clone();\r\n    botBoard.position.z = 152.5;\r\n    botBoard.position.y = 10;\r\n    scene.add(botBoard);\r\n\r\n    const rightBoard = new THREE.Mesh(new THREE.BoxGeometry(310, 20, 5), this.material);\r\n    rightBoard.rotation.y = Math.PI/2;\r\n    rightBoard.position.x = 152.5;\r\n    rightBoard.position.z = 0;\r\n    rightBoard.position.y = 10;\r\n    scene.add(rightBoard);\r\n\r\n    const leftBoard = rightBoard.clone();\r\n    leftBoard.position.x = -152.5;\r\n    scene.add(leftBoard);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.005;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","/*\r\nTo-Do:\r\n  - Loading state?\r\n  - New models\r\n  - Check when all models loaded\r\n  - Fix bamboo alphaMap for a smooth fade-in\r\n\r\nLinks of interest:\r\nhttps://threejs.org/examples/webgl_water_flowmap.html\r\n*/\r\n\r\nimport * as THREE from \"three\";\r\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport Bamboo from \"./models/Bamboo.js\";\r\nimport Grass from \"./models/Grass.js\";\r\nimport Sideboard from \"./models/Sideboard.js\";\r\n\r\nexport default class Forest {\r\n  constructor(canvas) {\r\n    this.camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 0.1, 100000);\r\n    this.camera.position.set(0, 250, 500);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setClearColor(\"rgb(40, 44, 52)\");\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 110, 0);\r\n    this.controls.update();\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    this.bamboo = new Bamboo(textureLoader);\r\n    this.grass = new Grass(textureLoader);\r\n    this.sideboard = new Sideboard(textureLoader);\r\n\r\n    this.render();\r\n  }\r\n\r\n  render(){\r\n    const self = this;\r\n\r\n    function loop(){\r\n      requestAnimationFrame(loop);\r\n      self.fadeIn();\r\n      self.renderer.render(self.scene, self.camera);\r\n    }\r\n\r\n    loop();\r\n  }\r\n\r\n  setup() {\r\n    // Add fog and lighting\r\n    const near = 1;\r\n    const far = 900;\r\n    const color = 'white';\r\n    this.scene.fog = new THREE.Fog(color, near, far);\r\n    this.scene.background = new THREE.Color(color);\r\n    this.scene.add(new THREE.AmbientLight(0x333333, 15));\r\n\r\n    this.bamboo.load(this.scene);\r\n    this.bamboo.makeVisible();\r\n\r\n    this.grass.load(this.scene);\r\n    this.grass.makeVisible();\r\n    \r\n    this.sideboard.load(this.scene);\r\n    this.sideboard.makeVisible();\r\n  }\r\n\r\n  fadeIn(){\r\n    /*\r\n    The bamboo material has to be set to 0.8 opacity initially. This is because\r\n    if the material has an alphaTest value, it will remain transparent until\r\n    opacity >= alphaTest, so the bamboo material needs a head start when fading\r\n    in. I didn't set the other textures to alphaTest 0.8 so they can all just\r\n    fade in together, and this is because doing so breaks the opacity of\r\n    materials without alphaMaps.\r\n    */\r\n    this.bamboo.fadeIn();\r\n    this.grass.fadeIn();\r\n    this.sideboard.fadeIn();\r\n  }\r\n\r\n  isFadingIn(){\r\n    return this.bamboo.isFadingIn;\r\n  }\r\n\r\n  onMouseMove(x, y){\r\n    console.log(\"MouseMove\");\r\n    this.mouse.x = parseFloat(x);\r\n    this.mouse.y = parseFloat(y);\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n  \tconst intersects = this.raycaster.intersectObjects(this.bamboo.getTrees(), true);\r\n  \tfor (const intersection of intersects) {\r\n      // console.log(intersection.object.skeleton.bones[0]);\r\n      // intersection.object.skeleton.bones[0].z += Math.PI/2;\r\n      console.log(intersection.object);\r\n  \t}\r\n  }\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Canvas.css\";\r\n\r\nimport Forest from \"../../graphics/Forest.js\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const forest = new Forest(canvas.current);\r\n\r\n    canvas.current.onmousemove = (e) => {\r\n      console.log(forest.isFadingIn);\r\n      if(!forest.isFadingIn){\r\n        const x = (e.clientX / window.innerWidth) * 2 - 1;\r\n    \t  const y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n        forest.onMouseMove(x, y);\r\n      }\r\n    }\r\n\r\n    forest.setup();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvas} width={window.innerWidth} height={window.innerHeight} className=\"canvas\">\r\n        <p>Your browser doesn't support canvas.</p>\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import './App.css';\n\nimport Canvas from './components/canvas/Canvas.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}