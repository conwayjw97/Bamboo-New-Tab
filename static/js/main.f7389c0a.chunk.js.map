{"version":3,"sources":["graphics/models/Bamboo.js","graphics/models/Grass.js","graphics/models/Sideboard.js","graphics/Forest.js","components/canvas/Canvas.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Bamboo","textureLoader","treeCount","width","height","this","material","THREE","map","load","process","alphaMap","alphaTest","side","opacity","transparent","xPositionRange","zPositionRange","swayAngle","trees","animatedTrees","isFadingIn","scene","self","FBXLoader","object","traverse","child","i","clone","SkeletonUtils","cloneGeometry","children","geometry","position","x","randFloat","z","scaleNum","scale","y","rotateZ","Math","PI","add","push","swayLimit","swayStep","swayRotation","cos","skinnedMesh","skeleton","bones","length","rotation","tree","console","log","Grass","texture","wrapS","wrapT","repeat","set","plane","Sideboard","relativeXPos","relativeZPos","topBoard","botBoard","rightBoard","leftBoard","Forest","canvas","settings","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","update","raycaster","mouse","initModels","loadScene","render","loop","animationFrameId","requestAnimationFrame","fadeIn","bamboo","swayAnimation","clearScene","grass","sideboard","color","fog","background","sceneMeshes","sceneMesh","remove","parseFloat","setFromCamera","intersects","intersectObjects","intersection","mouseOverAnimation","parent","Canvas","props","useRef","forest","useEffect","current","updateCount","ref","className","Search","field","useState","query","_setQuery","queryRef","handleSubmit","event","key","location","href","document","addEventListener","select","type","placeholder","style","top","value","onChange","onSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7389c0a.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\r\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\";\r\n\r\nexport default class Bamboo {\r\n  constructor(textureLoader, treeCount, width, height) {\r\n    const diffuse = process.env.PUBLIC_URL + \"/textures/bamboo/diffuse.jpg\";\r\n    const alpha = process.env.PUBLIC_URL + \"/textures/bamboo/alpha.jpg\";\r\n\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: textureLoader.load(diffuse),\r\n      alphaMap: textureLoader.load(alpha),\r\n      alphaTest: 0.5,\r\n      side:THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.treeCount = treeCount;\r\n    this.xPositionRange = width/2;\r\n    this.zPositionRange = height/2;\r\n    this.swayAngle = 0;\r\n    this.trees = [];\r\n    this.animatedTrees = [];\r\n    this.isFadingIn = false;\r\n  }\r\n\r\n  load(scene){\r\n    const self = this;\r\n    new FBXLoader().load(\r\n      process.env.PUBLIC_URL + \"/models/bamboo/BambooWithBones.fbx\",\r\n      function(object) {\r\n        object.traverse(function (child) {\r\n          if (child instanceof THREE.SkinnedMesh) {\r\n            child.material = self.material;\r\n          }\r\n        });\r\n\r\n        for (let i = 0; i < self.treeCount; i++) {\r\n          const clone = SkeletonUtils.clone(object);\r\n          const cloneGeometry = clone.children[1].geometry.clone();\r\n\r\n          clone.position.x = THREE.MathUtils.randFloat(-self.xPositionRange, self.xPositionRange);\r\n          clone.position.z = THREE.MathUtils.randFloat(-self.zPositionRange, self.zPositionRange);\r\n\r\n          const scaleNum = THREE.MathUtils.randFloat(0.5, 1.25);\r\n          clone.scale.x = scaleNum;\r\n          clone.scale.y = scaleNum;\r\n          clone.scale.z = scaleNum;\r\n\r\n          // Only the geometry is rotated to not change the bone axes\r\n          cloneGeometry.rotateZ((2 * Math.PI) * THREE.MathUtils.randFloat(0, 1));\r\n          clone.children[1].geometry = cloneGeometry;\r\n\r\n          scene.add(clone);\r\n          self.trees.push(clone);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n    this.isFadingIn = false;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 0.5){\r\n      this.isFadingIn = true;\r\n      this.material.opacity = 0.5;\r\n    }\r\n    else if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.005;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.isFadingIn = false;\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n\r\n  swayAnimation(){\r\n    if(this.trees !== []){\r\n      const swayLimit = (Math.PI / 8192);\r\n      const swayStep = (Math.PI / 360);\r\n      const swayRotation = (Math.cos(this.swayAngle) * swayLimit);\r\n      for(const tree of this.trees){\r\n        const skinnedMesh = tree.children[1];\r\n        for(let i=0; i<skinnedMesh.skeleton.bones.length; i++){\r\n          const bone = skinnedMesh.skeleton.bones[i];\r\n          bone.rotation.z += (swayRotation);\r\n        }\r\n      }\r\n      this.swayAngle += swayStep;\r\n    }\r\n  }\r\n\r\n  mouseOverAnimation(tree){\r\n    console.log(tree);\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nexport default class Grass {\r\n  constructor(textureLoader, width, height) {\r\n    const texture = textureLoader.load(process.env.PUBLIC_URL + \"/textures/grass/grass.jpg\");\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set( 4, 4 );\r\n    \r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  load(scene){\r\n    const geometry = new THREE.PlaneGeometry(this.width, this.height);\r\n    const plane = new THREE.Mesh(geometry, this.material);\r\n    plane.rotation.x = Math.PI/2;\r\n    scene.add(plane);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.01;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nexport default class Sideboard {\r\n  constructor(textureLoader, width, height){\r\n    const texture = textureLoader.load(process.env.PUBLIC_URL + \"/textures/wood/wood.jpg\");\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(7, 1);\r\n    \r\n    this.material = new THREE.MeshBasicMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.0,\r\n      transparent: true\r\n    });\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.relativeXPos = width/2 + 2.5;\r\n    this.relativeZPos = height/2 + 2.5;\r\n  }\r\n\r\n  load(scene){\r\n    const topBoard = new THREE.Mesh(new THREE.BoxGeometry(this.width, 20, 5), this.material);\r\n    topBoard.position.z = -this.relativeZPos;\r\n    topBoard.position.y = 10;\r\n    scene.add(topBoard);\r\n\r\n    const botBoard = topBoard.clone();\r\n    botBoard.position.z = this.relativeZPos;\r\n    botBoard.position.y = 10;\r\n    scene.add(botBoard);\r\n\r\n    const rightBoard = new THREE.Mesh(new THREE.BoxGeometry(this.height + 10, 20, 5), this.material);\r\n    rightBoard.rotation.y = Math.PI/2;\r\n    rightBoard.position.x = this.relativeXPos;\r\n    rightBoard.position.z = 0;\r\n    rightBoard.position.y = 10;\r\n    scene.add(rightBoard);\r\n\r\n    const leftBoard = rightBoard.clone();\r\n    leftBoard.position.x = -this.relativeXPos;\r\n    scene.add(leftBoard);\r\n  }\r\n\r\n  makeVisible(){\r\n    this.material.opacity = 1.0;\r\n  }\r\n\r\n  fadeIn(){\r\n    if(this.material.opacity < 1.0){\r\n      this.material.opacity += 0.01;\r\n    }\r\n    else if(this.material.opacity > 1.0){\r\n      this.material.opacity = 1.0;\r\n    }\r\n  }\r\n}\r\n","/*\r\nTo-Do:\r\n  - Loading state?\r\n  - New models\r\n  - Check when all models loaded\r\n  - Fix bamboo alphaMap for a smooth fade-in\r\n\r\nLinks of interest:\r\nhttps://stackoverflow.com/questions/54731571/animation-rotation-movement-of-an-object-on-mouse-click\r\nhttps://threejs.org/examples/webgl_water_flowmap.html\r\n*/\r\n\r\nimport * as THREE from \"three\";\r\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport Bamboo from \"./models/Bamboo.js\";\r\nimport Grass from \"./models/Grass.js\";\r\nimport Sideboard from \"./models/Sideboard.js\";\r\n\r\nexport default class Forest {\r\n  constructor(canvas, settings) {\r\n    this.camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 0.1, 100000);\r\n    this.camera.position.set(0, 260, 450);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setClearColor(\"rgb(40, 44, 52)\");\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 110, 0);\r\n    this.controls.update();\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n    this.textureLoader = new THREE.TextureLoader();\r\n\r\n    this.initModels(settings);\r\n    this.loadScene();\r\n    this.render();\r\n  }\r\n\r\n  render(){\r\n    const self = this;\r\n\r\n    function loop(){\r\n      self.animationFrameId = requestAnimationFrame(loop);\r\n      self.fadeIn();\r\n      self.bamboo.swayAnimation();\r\n      self.renderer.render(self.scene, self.camera);\r\n    }\r\n\r\n    loop();\r\n  }\r\n\r\n  update(settings){\r\n    this.clearScene();\r\n    this.initModels(settings);\r\n    this.loadScene();\r\n  }\r\n\r\n  initModels(settings){\r\n    this.bamboo = new Bamboo(this.textureLoader, settings.trees, settings.width, settings.height);\r\n    this.grass = new Grass(this.textureLoader, settings.width, settings.height);\r\n    this.sideboard = new Sideboard(this.textureLoader, settings.width, settings.height);\r\n  }\r\n\r\n  loadScene() {\r\n    const near = 1;\r\n    const far = 900;\r\n    const color = 'white';\r\n    this.scene.fog = new THREE.Fog(color, near, far);\r\n    this.scene.background = new THREE.Color(color);\r\n\r\n    this.scene.add(new THREE.AmbientLight(0x333333, 15));\r\n\r\n    this.bamboo.load(this.scene);\r\n    this.grass.load(this.scene);\r\n    this.sideboard.load(this.scene);\r\n  }\r\n\r\n  clearScene(){\r\n    let sceneMeshes = [];\r\n    this.scene.traverse(function(child){\r\n        sceneMeshes.push(child);\r\n    });\r\n\r\n    for(const sceneMesh of sceneMeshes){\r\n        this.scene.remove(sceneMesh);\r\n    }\r\n  }\r\n\r\n  fadeIn(){\r\n    /*\r\n    The bamboo material has to be set to 0.8 opacity initially. This is because\r\n    if the material has an alphaTest value, it will remain transparent until\r\n    opacity >= alphaTest, so the bamboo material needs a head start when fading\r\n    in. I didn't set the other textures to alphaTest 0.8 so they can all just\r\n    fade in together, and this is because doing so breaks the opacity of\r\n    materials without alphaMaps.\r\n    */\r\n    this.bamboo.fadeIn();\r\n    this.grass.fadeIn();\r\n    this.sideboard.fadeIn();\r\n  }\r\n\r\n  onMouseMove(x, y){\r\n    this.mouse.x = parseFloat(x);\r\n    this.mouse.y = parseFloat(y);\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n  \tconst intersects = this.raycaster.intersectObjects(this.bamboo.trees, true);\r\n  \tfor (const intersection of intersects) {\r\n      this.bamboo.mouseOverAnimation(intersection.object.parent);\r\n  \t}\r\n  }\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"./Canvas.css\";\r\n\r\nimport Forest from \"../../graphics/Forest.js\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const forest = useRef(null);\r\n\r\n  useEffect(() => {\r\n    forest.current = new Forest(canvas.current, props.settings);\r\n\r\n  //   canvas.current.onmousemove = (e) => {\r\n  //     if(!forest.current.bamboo.isFadingIn){\r\n  //       const x = (e.clientX / window.innerWidth) * 2 - 1;\r\n  //   \t  const y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n  //       forest.current.onMouseMove(x, y);\r\n  //     }\r\n  //   }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.updateCount>0){\r\n      forest.current.update(props.settings);\r\n    }\r\n  }, [props.updateCount]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvas} width={window.innerWidth} height={window.innerHeight} className=\"canvas\">\r\n        <p>Your browser doesn't support canvas.</p>\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"./Search.css\";\r\n\r\nfunction Search(props) {\r\n  const field = useRef(null);\r\n\r\n  const [query, _setQuery] = useState(\"\");\r\n  const queryRef = useRef(query);\r\n\r\n  const setQuery = x => {\r\n    queryRef.current = x;\r\n    _setQuery(x);\r\n  };\r\n\r\n  const handleQueryChange = (event) => {\r\n    setQuery(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      window.location.href = \"https://www.google.com/search?q=\" + queryRef.current;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", handleSubmit);\r\n\r\n    field.current.select();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"search\" ref={field} type=\"text\" placeholder=\"\"\r\n        style={{top: window.innerHeight/2, width: window.innerWidth}}\r\n        value={query} onChange={handleQueryChange} onSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Canvas from \"./components/canvas/Canvas.js\";\r\nimport Search from \"./components/search/Search.js\";\r\n\r\nfunction App() {\r\n  const [settings, setSettings] = useState({\r\n    width: 800,\r\n    height: 400,\r\n    trees: 400\r\n  });\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas settings={settings} updateCount={updateCount}/>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}